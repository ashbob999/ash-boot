# module declaration
module sample;

# externally defined functions
extern int putchar(int c);

function int add(int x, int y) {
	x + y;
}

# functions
function int main() {
	# variables
	var int i = 10;
	var float f = 1.5f;
	var bool b = true;

	# nested function (temp disabled)
	#function int add(int x, int y) {
	#	x + y;
	#}

	# function call
	var int r = add(i, 7);

	# if statement
	if (r > 15) {
		r = r * 1;
	} else {
		r = r / 2;
	}

	# inline if
	var int bv = if b {1;} else {2;};
	
	# for loop
	for int i = 0; i < 10; i = i+1 {
		
	}
	
	# while loop
	while i < 100 {
		i = i + 1;
	}
	
	# scope operator
	sample::putchar(97);
	
	# unary operator
	var int z = -i;
	
	# cast
	var i8 c1 = 8i8;
	var i64 c2 = c1<i64>;
	var f32 c3 = c1<i32><f32>;
	
	# switch
	switch (i) {
		case (0) {}
		case (1) {}
		case (2) {
			break;
		}
		default {}
	}
	
	# return value
	0;
}
